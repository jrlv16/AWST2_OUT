# Generated by Django 2.1.7 on 2019-05-06 17:22

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('catu', models.CharField(choices=[('FOOT', 'Footballeur'), ('ENTR', 'Entraineur'), ('ADMI', 'Admin')], default='FOOT', max_length=4, verbose_name='Catégorie accès:')),
                ('nom', models.CharField(max_length=50, verbose_name='Nom')),
                ('prenom', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('naissance', models.DateField(blank=True, null=True)),
                ('adresse', models.CharField(blank=True, max_length=250)),
                ('codepos', models.IntegerField(blank=True, null=True)),
                ('ville', models.CharField(blank=True, max_length=50, null=True)),
                ('telephone', models.CharField(blank=True, max_length=10, null=True)),
                ('club', models.CharField(blank=True, max_length=50, null=True)),
                ('club_ville', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Concerne',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cli', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('division_nom', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PagesPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=60)),
                ('permalink', models.CharField(max_length=12, unique=True)),
                ('bodytext', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Pied',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pied_nom', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Postes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pos_nom', models.CharField(max_length=50)),
                ('pos_type', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sec_nom', models.CharField(max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='Suivobs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('suivobs_date', models.DateField(auto_now=True)),
                ('suivobs_theme', models.CharField(blank=True, max_length=50, null=True)),
                ('suivobs_travail', models.TextField(blank=True, max_length=50, null=True)),
                ('suivobs_observation', models.TextField(max_length=500)),
                ('suivobs_axeprogres', models.TextField(max_length=50)),
                ('suivobs_video', models.CharField(blank=True, max_length=255, null=True)),
                ('suivobs_resultat', models.CharField(blank=True, max_length=25, null=True)),
                ('suivobs_but', models.IntegerField(blank=True, null=True)),
                ('suivobs_passe', models.IntegerField(blank=True, null=True)),
                ('coach', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TypeCli',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typ_nom', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Typsuivi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typsuivi_nom', models.CharField(max_length=25)),
            ],
        ),
        migrations.AddField(
            model_name='suivobs',
            name='typsuivi',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='suivi.Typsuivi'),
        ),
        migrations.AddField(
            model_name='concerne',
            name='suivobs',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='suivi.Suivobs'),
        ),
        migrations.AddField(
            model_name='client',
            name='division',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='suivi.Division'),
        ),
        migrations.AddField(
            model_name='client',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='client',
            name='pied',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='suivi.Pied'),
        ),
        migrations.AddField(
            model_name='client',
            name='pos',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='suivi.Postes', verbose_name='Poste'),
        ),
        migrations.AddField(
            model_name='client',
            name='sec',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='suivi.Section', verbose_name='Section'),
        ),
        migrations.AddField(
            model_name='client',
            name='typ',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='suivi.TypeCli', verbose_name='Type de client'),
        ),
        migrations.AddField(
            model_name='client',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
